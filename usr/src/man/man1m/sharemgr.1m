'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright 2017 Nexenta Systems, Inc.  All rights reserved.
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License. You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.
.\"  See the License for the specific language governing permissions and limitations under the License. When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with
.\" the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH SHAREMGR 1M "Sep 5, 2017"
.SH NAME
sharemgr \- configure and manage file sharing
.SH SYNOPSIS
.LP
.nf
\fBsharemgr\fR \fIsubcommand\fR [\fIoptions\fR]
.fi

.LP
.nf
\fBadd-share\fR [\fB-nth\fR] [\fB-r\fR \fIresource-name\fR] [\fB-d\fR "\fIdescription text\fR"]
 \fB-s\fR \fIsharepath\fR \fIgroup\fR
.fi

.LP
.nf
\fBcreate\fR [\fB-nvh\fR] [\fB-P\fR \fIproto\fR [\fB-p\fR \fIproperty\fR=\fIvalue\fR]] \fIgroup\fR
.fi

.LP
.nf
\fBdelete\fR [\fB-nvh\fR] [\fB-P\fR \fIproto\fR] [\fB-f\fR] \fIgroup\fR
.fi

.LP
.nf
\fBdisable\fR [\fB-nvh\fR] [\fB-a\fR | \fIgroup\fR...]
.fi

.LP
.nf
\fBenable\fR [\fB-nvh\fR] [\fB-a\fR | \fIgroup\fR...]
.fi

.LP
.nf
\fBlist\fR [\fB-vh\fR] [\fB-P\fR \fIproto\fR]
.fi

.LP
.nf
\fBmove-share\fR [\fB-nv\fR] \fB-s\fR \fIsharepath\fR \fIdestination-group\fR
.fi

.LP
.nf
\fBremove-share\fR [\fB-fnvh\fR] \fB-s\fR \fIsharepath\fR \fIgroup\fR
.fi

.LP
.nf
\fBset\fR [\fB-nvh\fR] \fB-P\fR \fIproto\fR [\fB-p\fR \fIproperty\fR=\fIvalue\fR]... [\fB-S\fR \fIoptionset\fR]
 [\fB-s\fR \fIsharepath\fR] \fIgroup\fR
.fi

.LP
.nf
\fBset-share\fR [\fB-nh\fR] [\fB-r\fR \fIresource\fR] [\fB-d\fR "\fIdescription text\fR"]
 \fB-s\fR \fIsharepath\fR \fIgroup\fR
.fi

.LP
.nf
\fBshow\fR [\fB-pvxh\fR] [\fB-P\fR \fIproto\fR] [\fIgroup\fR]...
.fi

.LP
.nf
\fBunset\fR [\fB-nvh\fR] \fB-P\fR \fIproto\fR [\fB-S\fR \fIoptionset\fR] [\fB-p\fR \fIproperty\fR]...
 \fIgroup\fR
.fi

.LP
.nf
\fBshare\fR [\fB-F\fR \fIfstype\fR] [\fB-p\fR] [\fB-o\fR \fIoptionlist\fR] [\fB-d\fR \fIdescription\fR]
 [\fIpathname\fR [\fIresourcename\fR]]
.fi

.LP
.nf
\fBunshare\fR [\fB-F\fR \fIfstype\fR] [\fB-p\fR] [\fB-o\fR \fIoptionlist\fR] \fIsharepath\fR
.fi

.SH DESCRIPTION
.LP
The \fBsharemgr\fR command configures share groups and the shares contained
within them.
.sp
.LP
A group name must conform to service management facility (SMF) (see
\fBsmf\fR(5)) service-naming conventions, thus is limited to starting with an
alphabetic character, with the rest of the name consisting only of alphanumeric
characters plus \fB-\fR (hyphen) and \fB_\fR (underbar).
.sp
.LP
Subcommands that result in a configuration change support a dry-run option.
When dry-run (\fB-n\fR) is specified, the syntax and validity of the command is
tested but the configuration is not actually updated.
.sp
.LP
For all subcommands, the \fB-h\fR option lists usage and help information.
.sp
.LP
For subcommands with the verbose (\fB-v\fR) option, additional information will
be provided. For example, in conjunction with the \fB-n\fR option, verbose mode
will also indicate whether the current user has sufficient permissions to
accomplish the operation.
.sp
.LP
There are two groups that are created automatically. The \fBdefault\fR group
always exists and covers legacy NFS shares only. The \fBzfs\fR group will be
created when ZFS shares are enabled.
.sp
.LP
The options shown in the SYNOPSIS section are described in the context of each
subcommand. All subcommands except \fBlist\fR and \fBshow\fR require root
privileges or that you assume the Primary Administrator role.
.SS "Subcommands"
.LP
With no subcommand entered, a \fBsharemgr\fR command with the \fB-h\fR option
displays a usage message for all subcommands.
.sp
.LP
The following subcommands follow \fBsharemgr\fR on a command line. Commands
take the form:
.sp
.in +2
.nf
% \fBsharemgr \fI<subcommand>\fR [\fIoptions\fR]\fR
.fi
.in -2
.sp

.sp
.ne 2
.na
\fB\fBcreate\fR \fB[-nvh] [-P \fIproto\fR [-p \fIproperty\fR=\fIvalue\fR]]
\fIgroup\fR\fR\fR
.ad
.sp .6
.RS 4n
Create a new group with specified name.
.sp
If \fB-n\fR is specified, the command checks only the validity of the command
and that the group does not already exist.
.sp
If no protocol is specified, all known protocols are enabled for the specified
group. If a protocol is specified, only that protocol is enabled. You can
specify properties for a specified protocol.
.sp
If \fIgroup\fR exists, use of \fB-P\fR adds the specified protocol to that
group.
.sp
As an example of the \fBcreate\fR subcommand, the following command creates a
new group with the name \fBmygroup\fR.
.sp
.in +2
.nf
# \fBsharemgr create mygroup\fR
.fi
.in -2
.sp

Because no protocol was specified in the preceding command, all defined
protocols will be enabled on the group.
.RE

.sp
.ne 2
.na
\fB\fBdelete\fR \fB[-nvh] [-P \fIproto\fR] [-f] \fIgroup\fR\fR\fR
.ad
.sp .6
.RS 4n
Delete the specified group. If the group is not empty, you can use the \fB-f\fR
option to force the deletion, which unshares and removes all shares from the
group before removing the group itself.
.sp
If you specify a protocol, rather than deleting the whole group, this
subcommand deletes the protocol from the group.
.sp
The \fB-n\fR option can be used to test the syntax of the command.
.sp
As an example, the following command removes the group \fBmygroup\fR from the
configuration if it is empty.
.sp
.in +2
.nf
# \fBsharemgr delete mygroup\fR
.fi
.in -2
.sp

The following command removes any existing shares prior to removing the group.
.sp
.in +2
.nf
# \fBsharemgr delete -f mygroup\fR
.fi
.in -2
.sp

Note the use of the force (\fB-f\fR) option, above.
.RE

.sp
.ne 2
.na
\fB\fBlist\fR \fB[-vh] [-P \fIproto\fR]\fR\fR
.ad
.sp .6
.RS 4n
List the defined groups.
.sp
If a protocol is specified, list only those groups that have the specified
protocol defined.
.sp
If the verbose option is specified, the current state of the group and all
protocols enabled on the group are listed as well. For example:
.sp
.in +2
.nf
# \fBsharemgr list -v\fR
mygroup    enabled    nfs
rdonlygrp  disabled   nfs
.fi
.in -2
.sp

.RE

.sp
.ne 2
.na
\fB\fBshow\fR \fB[-pvxh] [-P \fIproto\fR] [\fIgroup\fR...]\fR\fR
.ad
.sp .6
.RS 4n
Shows the contents of the specified group(s).
.sp
If the verbose option is specified, the resource name and description of each
share is displayed if they are defined. Otherwise, only the share paths are
displayed. Also, when temporary shares are listed, they are prefixed with an
asterisk (\fB*\fR).
.sp
If the \fB-p\fR option is specified, all options defined for the protocols of
the group are displayed, in addition to the display without options. If the
\fB-P\fR option is used, the output is limited to those groups that have the
specified protocol enabled. If the \fB-x\fR option is specified, output is in
XML format and the \fB-p\fR and \fB-v\fR options are ignored, because all
information is included in the XML.
.sp
The following example illustrates the use of the \fB-p\fR option.
.sp
.in +2
.nf
# \fBsharemgr show -p mygroup\fR
default nfs=()
    * /data/backup
mygroup nfs=(nosuid=true)
      /export/home/home0
      /export/home/home1
.fi
.in -2
.sp

The following example illustrates the use of the \fB-v\fR option.
.sp
.in +2
.nf
# \fBsharemgr show -v mygroup\fR
mygroup
    HOME0=/export/home/home0    "Home directory set 0"
    HOME1=/export/home/home1    "Home directory set 1"
.fi
.in -2
.sp

ZFS managed shares are handled in a way similar to the way NFS shares are
handled. These shares appear as subgroups within the parent group \fBzfs\fR.
The subgroups are always prefixed with \fBzfs/\fR and use the ZFS dataset name
for the rest of the name. The mount point and any sub-mounts that inherit
sharing are shown as the shares of the subgroup. For example:
.sp
.in +2
.nf
# \fBsharemgr show -vp zfs\fR
zfs        nfs=()
    zfs/ztest
          /ztest
          /ztest/backups
.fi
.in -2
.sp

.RE

.sp
.ne 2
.na
\fB\fBset\fR \fB[-nvh] -P \fIproto\fR [-S \fIoptionset\fR] [-p
\fIproperty\fR=\fIvalue\fR]* [-s \fIshare path\fR] \fIgroup\fR\fR\fR
.ad
.sp .6
.RS 4n
Set protocol-specific properties on the specified group.
.sp
The \fB-P\fR option is required and must specify a valid protocol.
.sp
Optionsets are protocol-specific sets of properties that can be negotiated by
the protocol client. For NFS, optionsets are equivalent to security modes as
defined in \fBnfssec\fR(5). If \fB-S\fR \fIoptionset\fR is specified, the
properties are applied to the selected optionset. Otherwise they are applied to
the general optionset.
.sp
Together, \fB-P\fR and \fB-S\fR select a specific view of the group's options
on which to work.
.sp
Property values are strings. A specified property is set to a new value if the
property already exists or is added to the protocol if it does not already
exist.
.sp
In the general case, at least one property must be set. If \fB-S\fR is
specified, properties can be omitted and the specified optionset is enabled for
the protocol.
.sp
The \fB-s\fR option allows setting properties on a per-share basis. While this
is supported, it should be limited to managing legacy shares and to the
occasional need for an override of a group-level property or placing an
additional property on one share within a group.
.sp
An example of this subcommand:
.sp
.in +2
.nf
# \fBsharemgr set -P nfs -p anon=1234 mygroup\fR
.fi
.in -2
.sp

The preceding command adds the property \fBanon=1234\fR to the \fBnfs\fR view
of group \fBmygroup\fR. If \fBmygroup\fR has existing shares, they will all be
reshared with the new property value(s).
.RE

.sp
.ne 2
.na
\fB\fBunset\fR \fB[-nvh] -P proto [-S \fIoptionset\fR] [-p \fIproperty\fR]* [-s
\fIsharepath\fR ] \fIgroup\fR\fR\fR
.ad
.sp .6
.RS 4n
Unset the specified properties for the protocol or for the specified
\fIoptionset\fR of the protocol.
.sp
In the general case, at least one property must be set. If \fB-S\fR is
specified, properties can be omitted and the specified optionset is removed
from the protocol.
.sp
The \fB-s\fR option allows removing a share-specific property.
.sp
An example of this subcommand:
.sp
.in +2
.nf
# \fBsharemgr unset -P nfs -p anon mygroup\fR
.fi
.in -2
.sp

The preceding command removes the \fBanon=\fR property from the \fBnfs\fR view
of group \fBmygroup\fR. If \fBmygroup\fR has existing shares, they will all be
reshared with the new property value(s).
.RE

.sp
.ne 2
.na
\fB\fBadd-share\fR \fB[-nth] [-r \fIresource-name\fR] [-d "\fIdescription
text\fR"] -s \fIsharepath\fR \fIgroup\fR\fR\fR
.ad
.sp .6
.RS 4n
Add a new share to the specified group.
.sp
The \fB-s\fR option is mandatory and takes a full directory path.
.sp
If either or both of \fB-d\fR and \fB-r\fR are specified, they specify values
associated with the share. \fB-d\fR provides a description string to document
the share and \fB-r\fR provides a protocol-independent resource name. Resource
names are not used by NFS at this time but can be specified. These names
currently follow the same naming rules as group names.
.sp
The temporary option (\fB-t\fR) results in the share being shared but not
stored in the configuration repository. This option is intended for shares that
should not survive a reboot or server restart, or for testing purposes.
Temporary shares are indicated in the \fBshow\fR subcommand output with an
asterisk (\fB*\fR) preceding the share.
.sp
If \fIsharepath\fR is a ZFS path and that path is added to the \fBzfs\fR group,
\fBsharemgr\fR creates a new ZFS subgroup; the new share is added to that
subgroup. Any ZFS sub-filesystems under the ZFS filesystem designated by
\fIsharepath\fR will inherit the shared status of \fIsharepath\fR.
.sp
The effect of the \fBadd-share\fR subcommand on a ZFS dataset is determined by
the values of the \fBsharesmb\fR and \fBsharenfs\fR properties of that dataset.
.sp
See \fBzfs\fR(1M) for a description of the \fBsharesmb\fR and \fBsharenfs\fR
properties.
.sp
The following are examples of the \fBadd-share\fR subcommand.
.sp
.in +2
.nf
# \fBsharemgr add-share -s /export/home/home0 -d "home \e
directory set 0" -r HOME0 mygroup\fR

# \fBsharemgr add-share -s /export/home/home1 -d "home \e
directory set 1" -r HOME1 mygroup\fR
.fi
.in -2
.sp

The preceding commands add \fB/export/home/home0\fR and
\fB/export/home/home1\fR to the group \fBmygroup\fR. A descriptive comment and
a resource name are included.
.RE

.sp
.ne 2
.na
\fB\fBmove-share\fR \fB[-nvh] -s \fIsharepath\fR \fIdestination-group\fR\fR\fR
.ad
.sp .6
.RS 4n
Move the specified share from the group it is currently in to the specified
destination group. The \fBmove-share\fR subcommand does not create a group. A
specified group must exist for the command to succeed.
.sp
The following is an example of this subcommand.
.sp
.in +2
.nf
# \fBsharemgr move-share -s /export/home/home1 newgroup\fR
.fi
.in -2
.sp

Assuming \fB/export/home/home1\fR is in the group \fBmygroup\fR, the preceding
command moves \fB/export/home/home1\fR to the group \fBnewgroup\fR and unshares
and then reshares the directory with the properties associated with
\fBnewgroup\fR.
.RE

.sp
.ne 2
.na
\fB\fBremove-share\fR \fB[-fnvh] -s \fIsharepath\fR \fIgroup\fR\fR\fR
.ad
.sp .6
.RS 4n
Remove the specified share from the specified group. The force (\fB-f\fR)
option forces the share to be removed even if it is busy.
.sp
You must specify the full path for \fIsharepath\fR. For group, use the subgroup
as displayed in the output of the \fBsharemgr show\fR command. Note that if
there are subshares that were created by inheritance, these will be removed,
along with the parent shares.
.RE

.sp
.ne 2
.na
\fB\fBset-share\fR \fB[-nvh] [-r \fIresource\fR] [-d "\fIdescription text\fR"]
-s \fIsharepath\fR \fIgroup\fR\fR\fR
.ad
.sp .6
.RS 4n
Set or change the specified share's description and resource values. One use of
\fBset-share\fR is to rename a resource. The syntax for this use of the
subcommand is:
.sp
.in +2
.nf
# \fBsharemgr set-share -r \fIcurrent_name\fR=\fInew_name\fR -s \fIsharepath\fR \fIgroup\fR\fR
.fi
.in -2
.sp

.RE

.sp
.ne 2
.na
\fB\fBenable\fR \fB[-nvh] [\fIgroup\fR... | -a]\fR\fR
.ad
.sp .6
.RS 4n
Enable the specified group(s), or (with \fB-a\fR) all groups, and start sharing
the contained shares. This state persists across reboots.
.sp
An enabled group will be shared whenever the corresponding SMF service instance
is enabled. \fBsharemgr\fR will start the SMF service instance if it is not
currently online.
.RE

.sp
.ne 2
.na
\fB\fBdisable\fR \fB[-nvh] [\fIgroup\fR... | -a]\fR\fR
.ad
.sp .6
.RS 4n
Disable the specified group(s), or (with \fB-a\fR) all groups, and unshare the
shares that they contain. This state persists across reboots.
.sp
A disabled group will not be shared even if the corresponding SMF service
instance is online. This feature is useful when you do not want a group of
shares to be started at boot time.
.RE

.sp
.ne 2
.na
\fB\fBstart\fR \fB[-vh] [-P \fIproto\fR] [\fIgroup\fR... | -a]\fR\fR
.ad
.sp .6
.RS 4n
Start the specified group, or (with \fB-a\fR) all groups. The \fBstart\fR
subcommand is similar to \fBenable\fR in that all shares are started, but
\fBstart\fR works only on groups that are enabled. \fBstart\fR is used by the
SMF to start sharing at system boot.
.sp
A group will not start sharing if it is in the \fBsharemgr\fR \fBdisabled\fR
state. However, the corresponding SMF service instance will be started.
.sp
Note that the \fBstart\fR subcommand is similar to the \fBshareall\fR(1M)
command in that it starts up only the configured shares. That is, the enabled
shares will start being shared, but the configuration state is left the same.
The command:
.sp
.in +2
.nf
# \fBsharemgr start -a\fR
.fi
.in -2
.sp

\&...is equivalent to:
.sp
.in +2
.nf
# \fBshareall\fR
.fi
.in -2
.sp

.RE

.sp
.ne 2
.na
\fB\fBstop\fR \fB[-vh] [-P \fIproto\fR] [\fIgroup\fR... | -a]\fR\fR
.ad
.sp .6
.RS 4n
Stop the specified group, or (with \fB-a\fR) all groups. The \fBstop\fR
subcommand is similar to \fBdisable\fR in that all shares are no longer shared,
but it works only on groups that are enabled. \fBstop\fR is used by the SMF to
stop sharing at system shutdown.
.sp
Note that the \fBstop\fR subcommand is similar to the \fBunshareall\fR(1M)
command in that all active shares are unshared, but the configuration is left
the same. That is, the shares are stopped but the service instances are left
enabled. The command:
.sp
.in +2
.nf
# \fBsharemgr stop -a\fR
.fi
.in -2
.sp

\&...is equivalent to:
.sp
.in +2
.nf
# \fBunshareall\fR
.fi
.in -2
.sp

.RE

.sp
.ne 2
.na
\fB\fBshare\fR \fB[-F \fIfstype\fR] [-p] [-o \fIoptionlist\fR] [-d
\fIdescription\fR] [\fIpathname\fR [\fIresourcename\fR]]\fR\fR
.ad
.sp .6
.RS 4n
Shares the specified path in the \fBdefault\fR share group. This subcommand
implements the \fBshare\fR(1M) functionality. Shares that are shared in this
manner will be transient shares. Use of the \fB-p\fR option causes the shares
to be persistent.
.RE

.sp
.ne 2
.na
\fB\fBunshare\fR \fB[-F \fIfstype\fR] [-p] [-o \fIoptionlist\fR]
\fIsharepath\fR\fR\fR
.ad
.sp .6
.RS 4n
Unshares the specified share. This subcommand implements the \fBunshare\fR(1M)
functionality. By default, the \fBunshare\fR is temporary. The \fB-p\fR option
is provided to remove the share from the configuration in a way that persists
across reboots.
.RE

.SH EXIT STATUS
.ne 2
.na
\fB\fB0\fR\fR
.ad
.RS 18n
Successful completion.
.RE

.sp
.ne 2
.na
\fB\fB98\fR\fR
.ad
.RS 18n
Service is offline and cannot be enabled (start only).
.RE

.sp
.ne 2
.na
\fB\fIother non-zero\fR\fR
.ad
.RS 18n
Command failed.
.RE

.SH FILES
.ne 2
.na
\fB\fB/usr/include/libshare.h\fR\fR
.ad
.RS 27n
Error codes used for exit status.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Committed
.TE

.SH SEE ALSO
.LP
\fBidmap\fR(1M), \fBsharectl\fR(1M), \fBzfs\fR(1M), \fBattributes\fR(5),
\fBnfssec\fR(5), \fBshareacl\fR(5), \fBsharenfs\fR(5), \fBsharesmb\fR(5),
\fBsmf\fR(5), \fBstandards\fR(5)
